name: Build, Release and Upload Promptly DMG

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main

jobs:

  build:
    name: Build DMG on macOS
    runs-on: macos-latest # GitHub Actions will use an image with a specific macOS and Xcode version

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Select Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2' # Be specific to match your local setup

      # ‼️ import certificate
      - name: Import Code-Signing Certificate
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.MACOS_CERTIFICATE }}
          p12-password: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}

      - name: Create GoogleService-Info.plist from Secret
        run: |
          echo "${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}" | base64 --decode > ./Promptly/GoogleService-Info.plist
      - name: Create build directory
        run: mkdir -p ./build
      - name: Build and Archive App
        run: |
          xcodebuild archive \
            -scheme Promptly \
            -archivePath ./build/Promptly.xcarchive \
            -sdk macosx \
            -configuration Release \
            CODE_SIGN_IDENTITY="-" \
            CODE_SIGNING_REQUIRED=YES \
            CODE_SIGNING_ALLOWED=YES

      - name: Export .app from Archive
        run: |
          xcodebuild -exportArchive \
            -archivePath ./build/Promptly.xcarchive \
            -exportPath ./build \
            -exportOptionsPlist ./ExportOptions.plist

      - name: Ad-hoc Sign the App
        run: |
          codesign --force --deep --sign - "./build/Promptly.app"

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create DMG
        run: |
          create-dmg \
            --volname "Promptly" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "Promptly.app" 200 190 \
            --hide-extension "Promptly.app" \
            --app-drop-link 600 185 \
            --skip-jenkins \
            "Promptly.dmg" \
            "build/Promptly.app"

      - name: Clean up sensitive files
        run: |
          rm -f ./Promptly/GoogleService-Info.plist

      - name: Upload DMG Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Promptly-dmg-artifact
          path: Promptly.dmg


  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch complete commit history for changelog generation

      - name: Install git-cliff
        uses: taiki-e/install-action@v2
        with:
          tool: git-cliff

      - name: Generate changelog with git-cliff
        run: |
          # Generate complete changelog
          git-cliff --output CHANGELOG.md
          
          # Generate current version release notes
          git-cliff --latest --strip all > release_notes.md
          
          # Set release notes environment variable
          if [ -s release_notes.md ]; then
            echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
            cat release_notes.md >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
            echo "## ${{ github.ref_name }}" >> $GITHUB_ENV
            echo "" >> $GITHUB_ENV
            echo "New release based on tag ${{ github.ref_name }}." >> $GITHUB_ENV
            echo "The DMG file below was automatically built by GitHub Actions." >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Commit changelog
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "chore: update changelog for ${{ github.ref_name }} [skip ci]" || echo "No changes to commit"

      - name: Download DMG Artifact
        uses: actions/download-artifact@v4
        with:
          name: Promptly-dmg-artifact

      - name: Create Release and Upload DMG
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: Promptly.dmg
          name: Release ${{ github.ref_name }}
          body: ${{ env.RELEASE_NOTES }}
          prerelease: false