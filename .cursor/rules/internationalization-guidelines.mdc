---
description: 
globs: 
alwaysApply: false
---
# 国际化 (i18n) 开发规范

## 支持的语言

Promptly 目前支持以下语言：

- **English** (`en`) - 英语 (默认)
- **简体中文** (`zh-Hans`) - 简体中文

## 本地化文件结构

### 目录组织
```
Promptly/Resources/
├── en.lproj/
│   └── Localizable.strings
└── zh-Hans.lproj/
    └── Localizable.strings
```

### 本地化键值规范

#### 命名规则
- 使用点号分隔的层级结构 (如 `app.name`, `settings.language`)
- 按功能模块分组 (如 `prompt.*`, `tags.*`, `settings.*`)
- 保持键名简洁但具有描述性

#### 分组规则
```swift
// MARK: - 应用通用
"app.name" = "Promptly";
"app.tagline" = "Your AI Prompt Companion";

// MARK: - 菜单栏
"menubar.show" = "Show Promptly";
"menubar.preferences" = "Preferences";

// MARK: - Prompt 管理
"prompt.new" = "New Prompt";
"prompt.copy" = "Copy";
```

## LocalizationManager 使用

### 基本用法
```swift
// 在 Swift 代码中
let title = "app.name".localized

// 带参数的本地化
let message = "search.results".localized(with: resultCount)

// 在 SwiftUI 中
Text(localized: "main.empty.title")
```

### LocalizationManager 功能

#### 核心类：`LocalizationManager`
- 单例模式：`LocalizationManager.shared`
- 支持运行时语言切换
- 自动保存用户语言偏好

#### 支持的语言枚举
```swift
enum SupportedLanguage: String, CaseIterable {
    case english = "en"
    case simplifiedChinese = "zh-Hans"
}
```

## SwiftUI 视图本地化

### Text 视图
```swift
// 推荐方式 - 使用扩展
Text(localized: "prompt.title.placeholder")

// 带默认值
Text(localized: "custom.key", defaultValue: "Default Text")
```

### 输入框占位符
```swift
TextField("prompt.title.placeholder".localized, text: $title)
```

### 按钮标题
```swift
Button("prompt.save".localized) {
    // 保存操作
}
```

## 本地化最佳实践

### 1. 文本规范
- 所有用户可见的文本都必须本地化
- 避免硬编码字符串
- 为每个键提供有意义的注释

### 2. 参数化字符串
```swift
// 正确：使用格式化参数
"search.results" = "%d result(s)";

// 使用时
let message = "search.results".localized(with: count)
```

### 3. 复数形式处理
```swift
// 英语
"search.results" = "%d result(s)";

// 中文
"search.results" = "%d 个结果";

// 日语
"search.results" = "%d件の結果";
```

### 4. 错误处理
- 为所有错误消息提供本地化
- 确保错误信息对用户友好

### 5. 键值管理
- 定期审查和清理未使用的键
- 保持各语言文件的键同步
- 使用脚本验证翻译完整性

## 代码规范

### String 扩展使用
```swift
// 基本本地化
"app.name".localized

// 带参数
"confirm.delete.prompt.message".localized(with: promptTitle)

// 带默认值
"optional.key".localized(defaultValue: "Default")
```

### SwiftUI 集成
```swift
struct MyView: View {
    @StateObject private var localizationManager = LocalizationManager.shared
    
    var body: some View {
        VStack {
            Text(localized: "main.title")
            
            // 语言切换器
            Picker("Language", selection: $localizationManager.currentLanguage) {
                ForEach(LocalizationManager.SupportedLanguage.allCases) { language in
                    Text(language.displayName).tag(language)
                }
            }
        }
    }
}
```

## 新增语言支持流程

### 1. 创建本地化目录
```bash
mkdir -p Promptly/Resources/[language-code].lproj
```

### 2. 复制并翻译字符串文件
```bash
cp Promptly/Resources/en.lproj/Localizable.strings Promptly/Resources/[language-code].lproj/
```

### 3. 更新 LocalizationManager
```